job-service.url=http://localhost:8082
company-service.url=http://localhost:8081
review-service.url=http://localhost:8083

server.port=8082
spring.application.name=job-service

#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update

#PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=kzrality
spring.datasource.password=123
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop

#Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#Zipkin
management.tracing.sampling.probability=1.0

#Config server
spring.config.import=optional:configserver:http://localhost:8080
spring.profiles.active=dev


#Resilience4J
# CircuitBreaker configuration
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

# Retry configuration
resilience4j.retry.instances.companyBreaker.max-attempts=5
resilience4j.retry.instances.companyBreaker.waitDuration=2000
resilience4j.retry.instances.companyBreaker.eventConsumerBufferSize=10

#RateLimiter
resilience4j.ratelimiter.instances.companyBreaker.timeout-duration=0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period=4
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2
#Actuator

management.endpoints.web.exposure.include=health,circuitbreakers
management.endpoint.circuitbreakerevents.enabled=true
management.endpoint.health.show-details=always



